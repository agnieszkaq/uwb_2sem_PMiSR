
import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;

import java.util.TimerTask;
import javax.swing.Action;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Admin
 */
public class Frame extends javax.swing.JFrame {

    /**
     * Creates new form Frame
     */
    Timer timer;
    double time = 0.0;
    private Graphics graphics;
    DecimalFormat df = new DecimalFormat("#.##");
    private Double distance;
    private Double fx;
    private Double power;
    private Double angle;
    private int pow;
    private Integer delay = 22;
    private Integer zerobutton = 0;
    private String system;
    private double dis;
    private double x;
    private Double far;
    private Double neg_medium_pow;
    private Double zero_pow;
    private Double pos_medium_pow;
    private Double pos_high_pow;
    private Double pos_small;
    private Double zerodis;
    private Double close;
    private Double zero;
    private Double neg_small;
    private Double neg_big;

    private Double medium;

    public Frame() {
        initComponents();

        graphics = jGraphicLabel.getGraphics();
        distance = 0.0;
        power = 0.0;
        angle = 0.0;
        pow = 0;
        dis = 21.84;
        x = 0;

        neg_medium_pow = -6.75;
        zero_pow = 0.0;
        pos_medium_pow = 25.0;
        pos_high_pow = 30.0;

        system = "Manual";
        init_timer();

    }

    private void init_timer() {
        ActionListener al = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                timer_tick();
            }
        };
        this.timer = new Timer(10, al);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jStartButton = new javax.swing.JButton();
        jAngileLabel = new javax.swing.JLabel();
        jDistanceLabel = new javax.swing.JLabel();
        jPowerLabel = new javax.swing.JLabel();
        jAngileText = new javax.swing.JLabel();
        jDistanceText = new javax.swing.JLabel();
        jPowerText = new javax.swing.JLabel();
        jFuzzyButton = new javax.swing.JButton();
        jGraphicLabel = new javax.swing.JLabel();
        jExitButton = new javax.swing.JButton();
        jPlusButton = new javax.swing.JButton();
        jMinusButton = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jStartButton.setText(" position");
        jStartButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jStartButton.setBorderPainted(false);
        jStartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jStartButtonActionPerformed(evt);
            }
        });

        jAngileLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jAngileLabel.setText("Angile: Degree");

        jDistanceLabel.setText("Distance: Yard");

        jPowerLabel.setText("Power: KW");

        jAngileText.setText("0.00");

        jDistanceText.setText("21.84");

        jPowerText.setText("0.00");

        jFuzzyButton.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jFuzzyButton.setText("Fuzzy");
        jFuzzyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFuzzyButtonActionPerformed(evt);
            }
        });

        jGraphicLabel.setBackground(new java.awt.Color(204, 0, 0));
        jGraphicLabel.setForeground(new java.awt.Color(0, 204, 51));
        jGraphicLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/white.png"))); // NOI18N

        jExitButton.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jExitButton.setText("EXIT");
        jExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jExitButtonActionPerformed(evt);
            }
        });

        jPlusButton.setText("+");
        jPlusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPlusButtonActionPerformed(evt);
            }
        });

        jMinusButton.setText("-");
        jMinusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMinusButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDistanceLabel)
                    .addComponent(jAngileLabel)
                    .addComponent(jPowerLabel))
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDistanceText)
                    .addComponent(jAngileText)
                    .addComponent(jPowerText))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jGraphicLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 593, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPlusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jMinusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jStartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jFuzzyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(136, 136, 136))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jStartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPlusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jMinusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFuzzyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 198, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jGraphicLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jAngileLabel)
                    .addComponent(jAngileText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jDistanceLabel)
                    .addComponent(jDistanceText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPowerLabel)
                    .addComponent(jPowerText))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void timer_tick() {
        System.out.println(system);
        if (system.equals("fuzzy")) {
            this.power = fuzzy();
            this.fx = 52 + Math.round(((21.84 - distance) / 0.0678) * 100.0) / 100.0;

        }

        this.distance = Math.round(sim() * 100.0) / 100.0;

        this.angle = -sim2();
        this.delay = 215 - Math.abs(power.intValue());
        this.fx = 52 + Math.round(((21.84 - distance) / 0.0678) * 100.0) / 100.0;
        cleanimage();
        drawnewimage();
        System.out.println("przed " + fx);

        jAngileText.setText(angle.toString());
        jDistanceText.setText(String.valueOf(df.format(distance)));
        jAngileText.setText(String.valueOf(df.format(angle)));
        jPowerText.setText(String.valueOf(df.format(power)));
        if (this.power == 0) {
            System.exit(0);
        }
        this.timer.stop();
        this.timer.start();

    }

    private double sim() {
        if (system.equals("fuzzy") && (power == 0) && (dis > 0)) {
            power = 0.5;
            double x = (0.5 * 100 * power / this.delay / this.delay);
            dis = dis - x;

        } else {
            double x = (0.5 * 1000 * power / this.delay / this.delay);
            dis = dis - x;
            System.out.println("Frame.sim(): " + x + " " + dis);
        }
        return dis;
    }

    private double sim2() {
        if (system == "Manual") {

            if (this.zerobutton == 1) {
                if (this.power >= pow) {
                    if (this.power <= (int) (-pow / 3)) {
                        this.power = this.power + 3;
                    } else {
                        pow = this.power.intValue();
                    }
                }
                if (this.power <= pow) {
                    if (this.power <= (int) (-pow / 3)) {
                        this.power = this.power - 3;
                    } else {
                        this.pow = this.power.intValue();
                    }
                }
                if (Math.abs((int) pow - 3) == 0) {
                    this.power = 0.0;
                    pow = 0;
                    this.zerobutton = 0;
                }
            }
        }
        double a = (0.5 * 1000 * power / this.delay / this.delay);

        a = Math.asin(a / 100);
        a = Math.round(a * 100 / Math.PI * 100);
        return a;
    }

    private double fuzzy() {
        if ((this.angle < 0) && (this.angle >= -90)) {
            pos_small = 0.0;
        } else if ((this.angle < 10) && (this.angle >= 0)) {
            pos_small = (0.1 * this.angle);
        } else if ((this.angle < 60) && (this.angle >= 10)) {
            pos_small = (-0.02 * this.angle + 1.2);
        } else if ((this.angle <= 90) && (this.angle >= 60)) {
            pos_small = 0.0;
        }

        if ((this.distance < -5) && (this.distance >= -10)) {
            zerodis = 0.0;
        } else if ((this.distance < 0) && (this.distance >= -5)) {
            zerodis = (0.2 * this.distance + 1);
        } else if ((this.distance < 5) && (this.distance >= 0)) {
            zerodis = (-0.2 * this.distance + 1);
        } else if ((this.distance <= 30) && (this.distance >= 5)) {
            zerodis = 0.0;
        }

        if ((this.distance < 0) && (this.distance >= -10)) {
            close = 0.0;
        } else if ((this.distance < 5) && (this.distance >= 0)) {
            close = (0.2 * this.distance);
        } else if ((this.distance < 10) && (this.distance >= 5)) {
            close = (0.2 * this.distance + 2);
        } else if ((this.distance <= 30) && (this.distance >= 10)) {
            close = 0.0;
        }

        if ((this.angle >= -90) && (this.angle < -10)) {
            zero = 0.0;
        } else if ((this.angle < 0) && (this.angle >= -10)) {
            zero = (0.1 * this.angle + 1);
        } else if ((this.angle < 10) && (this.angle >= 0)) {
            zero = (-0.1 * this.angle + 1);
        } else if ((this.angle <= 90) && (this.angle >= 10)) {
            zero = 0.0;
        }

        if ((this.angle < -60) && (this.angle >= -90)) {
            neg_small = 0.0;
        } else if ((this.angle < -10) && (this.angle >= -60)) {
            neg_small = (0.02 * this.angle + 1.2);
        } else if ((this.angle < 0) && (this.angle >= -10)) {
            neg_small = (-0.1 * this.angle);
        } else if ((this.angle <= 90) && (this.angle >= 0)) {
            neg_small = 0.0;
        }

        if ((this.angle < -60) && (this.angle >= -90)) {
            neg_big = 1.0;
        } else if ((this.angle >= -60) && (this.angle < -10)) {
            neg_big = (-0.02 * this.angle - 0.2);
        } else if ((this.angle >= -10) && (this.angle <= 90)) {
            neg_big = 0.0;
        }

        if ((this.distance < 5) && (this.distance >= -10)) {
            medium = 0.0;
        } else if ((this.distance < 10) && (this.distance >= 5)) {
            medium = (0.2 * this.distance - 1);
        } else if ((this.distance < 22) && (this.distance >= 10)) {
            medium = ((-1 / 12) * this.distance + (11 / 6));
        } else if ((this.distance <= 30) && (this.distance >= 22)) {
            medium = 0.0;
        }

        if ((this.distance < 10) && (this.distance >= -10)) {
            far = 0.0;
        } else if ((this.distance < 22) && (this.distance >= 10)) {
            far = ((1 / 12) * this.distance - (5 / 6));
        } else if ((this.distance <= 30) && (this.distance >= 22)) {
            far = 1.0;
        }

        //Metoda środka maximum
        return Math.round((int) Math.max(Math.max(Math.min(neg_small, medium), Math.min(neg_small, far)) * pos_high_pow, Math.max(Math.max(Math.min(neg_small, close), Math.min(neg_big, medium)), Math.min(zero, far)) * pos_medium_pow) + (Math.min(Math.max(Math.min(pos_small, zerodis), Math.min(pos_small, close)) * neg_medium_pow, Math.max(Math.min(zero, zerodis), Math.min(zero, close)) * zero_pow)) / 2);
        //Metoda środka ciężkości
        //return Math.round((int) (Math.max(Math.min(pos_small, zerodis), Math.min(pos_small, close)) * neg_medium_pow + Math.max(Math.min(zero, zerodis), Math.min(zero, close)) * zero_pow + Math.max(Math.max(Math.min(neg_small, close), Math.min(neg_big, medium)), Math.min(zero, far)) * pos_medium_pow + Math.max(Math.min(neg_small, medium), Math.min(neg_small, far)) * pos_high_pow));
        //Metoda wysokości
        //return Math.round((int) (Math.max(Math.min(pos_small, close), Math.min(pos_small, zerodis)) * neg_medium_pow + Math.max(Math.min(zero, zerodis), Math.min(zero, close)) * zero_pow + Math.max(Math.max(Math.min(neg_big, medium), Math.min(neg_small, close)), Math.min(neg_small, close)) * pos_medium_pow + Math.max(Math.min(neg_small, medium), Math.min(neg_small, far)) * pos_high_pow) / (Math.min(pos_small, zerodis) + Math.min(pos_small, close) + Math.min(zero, zerodis) + Math.min(zero, close) + Math.min(neg_small, close) + Math.min(neg_big, medium) + Math.min(neg_small, close) + Math.min(neg_big, medium) + Math.min(neg_small, medium) + Math.min(neg_small, far)));

    }


    private void jStartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jStartButtonActionPerformed
        this.system = "Manual";
        this.power = 0.0;

        timer_tick();

    }//GEN-LAST:event_jStartButtonActionPerformed

    private void jExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jExitButtonActionPerformed
        // TODO add your handling code here:
        dispose();
        System.exit(0);
    }//GEN-LAST:event_jExitButtonActionPerformed

    private void jFuzzyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFuzzyButtonActionPerformed
        // TODO add your handling code here:

        system = "fuzzy";
        this.angle = sim2();
        this.power = 0.5;

        jAngileText.setText(angle.toString());
        jDistanceText.setText(String.valueOf(df.format(distance)));
        jAngileText.setText(String.valueOf(df.format(angle)));
        jPowerText.setText(String.valueOf(df.format(power)));

        this.timer.stop();
        this.timer.start();

    }//GEN-LAST:event_jFuzzyButtonActionPerformed

    private void jPlusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPlusButtonActionPerformed
        // TODO add your handling code here:
        this.power = this.power + 3;
        jPowerText.setText(power.toString());
    }//GEN-LAST:event_jPlusButtonActionPerformed

    private void jMinusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMinusButtonActionPerformed
        // TODO add your handling code here:
        this.power = this.power - 3;
        jPowerText.setText(power.toString());

    }//GEN-LAST:event_jMinusButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    public void drawnewimage() {
        System.out.println("drawnewimage();");
        graphics.setColor(Color.RED);

        graphics.fillRect(40, 210, 52, 16);
        graphics.setColor(Color.GREEN);

        graphics.fillRect(370, 210, 52, 16);
        graphics.setColor(Color.BLACK);
        graphics.fillRect((int) Math.floor(fx), 30, 42, 16);
        graphics.fillRect((int) (fx + 21 + 101 * (double) (Math.sin((double) (this.angle) * Math.PI / 180)) - 24), ((int) (44 + 101 * (Math.cos(this.angle * Math.PI / 180)))), 48, 57);

        graphics.drawLine((int) (fx + 21 + 101 * (Math.sin((double) (this.angle) * Math.PI / 180))), ((int) (44 + 101 * (Math.cos(this.angle * Math.PI / 180)))), (int) (fx + 5), 44);
        graphics.drawLine((int) (fx + 21 + 101 * (Math.sin((double) (this.angle) * Math.PI / 180))), ((int) (44 + 101 * (Math.cos(this.angle * Math.PI / 180)))), (int) (fx + 37), 44);

    }

    public void cleanimage() {
        System.out.println("cleanimage();");
        graphics.setColor(Color.WHITE);
        graphics.fillRect(0, 0, 100000, 100000);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jAngileLabel;
    private javax.swing.JLabel jAngileText;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jDistanceLabel;
    private javax.swing.JLabel jDistanceText;
    private javax.swing.JButton jExitButton;
    private javax.swing.JButton jFuzzyButton;
    private javax.swing.JLabel jGraphicLabel;
    private javax.swing.JButton jMinusButton;
    private javax.swing.JButton jPlusButton;
    private javax.swing.JLabel jPowerLabel;
    private javax.swing.JLabel jPowerText;
    private javax.swing.JButton jStartButton;
    // End of variables declaration//GEN-END:variables
}
